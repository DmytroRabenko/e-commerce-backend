generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url = env("POSTGRES_PRISMA_URL") // uses connection pooling
  directUrl = env("POSTGRES_URL_NON_POOLING") // uses a direct connection
}

//Модель для користувача
model User {
  id          Int        @id @default(autoincrement())
  username    String
  email       String     @unique
  password    String     @db.VarChar(60)
  createdAt   DateTime   @default(now())
  wishlist    Wishlist[] // Додано зв'язок з моделлю Wishlist
  cartItems   CartItem[] // Додано зв'язок з моделлю CartItem
  orders      Order[]    // Додано зв'язок з моделлю Order
}
//продукт
model Product {
  id               Int           @id @default(autoincrement())
  title            String
  description      String
  brand            String
  seria            String
  gender           String?
  price            Float
  count            Int
  value            String?  
  media            String[] 
  attributes       ProductAttribute[]
  category         Category      @relation(fields: [categoryId], references: [id])
  categoryId       Int
  mainCategory     MainCategory? @relation(fields: [mainCategoryId], references: [id])
  mainCategoryId   Int?
  createdAt        DateTime      @default(now())
  wishlistItems    Wishlist[]    // Додано протилежне поле зв'язку
  cartItems        CartItem[]    // Додано протилежне поле зв'язку
  orderProducts    OrderProduct[] // Додано зв'язок з проміжною таблицею OrderProduct
  reviews          Review[] 
}

model ProductAttribute {
  id            Int      @id @default(autoincrement())
  product       Product  @relation(fields: [productId], references: [id])
  productId     Int
  attributeKey  String
  attributeValue String
}

model Review {
  id          Int       @id @default(autoincrement())
  content     String
  rating      Int        // Оцінка від 1 до 5, наприклад
  createdAt   DateTime  @default(now())
  // Зв'язок з продуктом
  product     Product   @relation(fields: [productId], references: [id])
  productId   Int
}

//категорія
model Category {
  id          Int       @id @default(autoincrement())
  name        String
  description String?
  products    Product[]
}
//основна категорія
model MainCategory {
  id          Int       @id @default(autoincrement())
  name        String
  products    Product[]
}
//список бажань
model Wishlist {
  id         Int       @id @default(autoincrement())
  user       User      @relation(fields: [userId], references: [id])
  userId     Int
  product    Product   @relation(fields: [productId], references: [id])
  productId  Int
  createdAt  DateTime  @default(now())

  @@unique([userId, productId])
}
//корзина
model CartItem {
  id         Int       @id @default(autoincrement())
  user       User      @relation(fields: [userId], references: [id])
  userId     Int
  product    Product   @relation(fields: [productId], references: [id])
  productId  Int
  quantity   Int
  createdAt  DateTime  @default(now())

  @@unique([userId, productId])
}
//замовлення
model Order {
  id               Int         @id @default(autoincrement())
  user             User        @relation(fields: [userId], references: [id])
  userId           Int
  products         OrderProduct[] // Змінено зв'язок на проміжну таблицю OrderProduct
  totalPrice       Float
  createdAt        DateTime    @default(now())

  @@unique([userId])
}
//замовлення продукти
model OrderProduct {
  id        Int      @id @default(autoincrement())
  order     Order    @relation(fields: [orderId], references: [id])
  orderId   Int
  product   Product  @relation(fields: [productId], references: [id])
  productId Int

  @@unique([orderId, productId])
}
